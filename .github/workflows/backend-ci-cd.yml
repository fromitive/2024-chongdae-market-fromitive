name: Backend CI/CD Workflow

on:
  pull_request:
    branches: [ "develop-BE", "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Gradle Caching
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set Application yml for dev
        if: github.ref == 'refs/heads/develop-BE'
        run: |
          echo "${{ secrets.APPLICATION_YML_DEV_BASE64 }}" | base64 --decode > src/main/resources/application.yml
        working-directory: ./backend

      - name: Set Application yml for prod
        if: github.ref == 'refs/heads/main'
        run: |
          echo "${{ secrets.APPLICATION_YML_PROD_BASE64 }}" | base64 --decode > src/main/resources/application.yml
        working-directory: ./backend

      - name: Build with Gradle Wrapper
        run: |
          ./gradlew clean
          ./gradlew copyOasToSwagger
          ./gradlew build
        working-directory: ./backend

  docker-build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Docker login
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker build and push for dev
        if: github.ref == 'refs/heads/develop-BE'
        run: |
          docker build -t ${{ secrets.DOCKERHUB_IMAGE_NAME }}:dev .
          docker tag ${{ secrets.DOCKERHUB_IMAGE_NAME }}:dev ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGE_NAME }}:dev-${GITHUB_SHA::7}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGE_NAME }}:dev-${GITHUB_SHA::7}

      - name: Docker build and push for prod
        if: github.ref == 'refs/heads/main'
        run: |
          docker build -t ${{ secrets.DOCKERHUB_IMAGE_NAME }}:prod .
          docker tag ${{ secrets.DOCKERHUB_IMAGE_NAME }}:prod ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGE_NAME }}:prod-${GITHUB_SHA::7}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGE_NAME }}:prod-${GITHUB_SHA::7}

  deploy-dev:
    needs: docker-build-and-push
    if: github.ref == 'refs/heads/devlop-BE'
    runs-on: [ self-hosted, dev ]

    steps:
      - name: Pull Image And Restart Container
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker stop ${{ secrets.DOCKERHUB_CONTAINER_NAME }}-dev | true
          docker rm ${{ secrets.DOCKERHUB_CONTAINER_NAME }}-dev | true
          docker image prune -a -f
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGE_NAME }}:dev-${GITHUB_SHA::7}
          docker run --name ${{ secrets.DOCKERHUB_CONTAINER_NAME }}-dev -d -p 8080:8080 -v /logs:/logs ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGE_NAME }}:dev-${GITHUB_SHA::7}

  deploy-prod:
    needs: docker-build-and-push
    if: github.ref == 'refs/heads/main'
    runs-on: [ self-hosted, prod ]

    steps:
      - name: Pull Image And Restart Container
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker stop ${{ secrets.DOCKERHUB_CONTAINER_NAME }}-prod | true
          docker rm ${{ secrets.DOCKERHUB_CONTAINER_NAME }}-prod | true
          docker image prune -a -f
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGE_NAME }}:prod-${GITHUB_SHA::7}
          docker run --name ${{ secrets.DOCKERHUB_CONTAINER_NAME }}-prod -d -p 8080:8080 -v /logs:/logs ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGE_NAME }}:prod-${GITHUB_SHA::7}